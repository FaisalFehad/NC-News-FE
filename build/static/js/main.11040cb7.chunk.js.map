{"version":3,"sources":["components/Title.jsx","utils/api.js","components/Navbar.jsx","utils/updateVoteReq.js","components/Vote.jsx","components/ArticleCard.jsx","components/Loading.jsx","components/ArticleList.jsx","utils/postCommentReq.js","components/NoticeMsgDisplay.jsx","components/CommentForm.jsx","components/ErrDisplay.jsx","components/Article.jsx","utils/deleteCommentReq.js","components/ArticleComments.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","username","makeApiRequests","url","axios","get","then","data","Navbar","state","allTopics","topics","map","topic","setState","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","index","className","to","slug","toUpperCase","Component","updateArticleVoteReq","inc_votes","path","patch","Vote","currentVote","voteValue","handleVote","num","currentState","props","onClick","event","ArticleCard","allArticles","article","key","article_id","title","comment_count","votes","Loading","msg","ArticleList","loading","articlesData","articles","postComment","body","console","log","post","NoticeMsgDisplay","role","CommentForm","bodyInput","postedComment","posting","handleChange","target","value","handleSubmit","preventDefault","comment","onSubmit","placeholder","onChange","ErrHandling","err_msg","Article","err","catch","author","created_at","ErrDisplay","deleteCommentReq","delete","ArticleComments","comments","sortBy","loggedInUser","deletingComment","commentDeleted","handleSortByByChange","handleDeleteComment","comment_id","App","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11040cb7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = ({ username }) => {\n  return (\n    <div>\n      <h1>NC News</h1>\n      <h5>Logged In As: {username}</h5>\n    </div>\n  );\n};\n\nexport default Title;\n","import axios from \"axios\";\n\nexport const makeApiRequests = url => {\n  return axios\n    .get(`https://nc-news2020.herokuapp.com/api/${url}`)\n    .then(({ data }) => {\n      return data;\n    });\n};\n\nexport default makeApiRequests;\n","import React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport { Link } from \"@reach/router\";\n\nclass Navbar extends Component {\n  state = {\n    allTopics: []\n  };\n\n  componentDidMount() {\n    makeApiRequests(\"topics/\").then(({ topics }) => {\n      const allTopics = topics.map(topic => topic);\n      this.setState({ allTopics });\n    });\n  }\n\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"/\">\n          NC News\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div class=\"navbar-nav\">\n            {this.state.allTopics.map((topic, index) => {\n              return (\n                <Link\n                  className=\"nav-item nav-link active\"\n                  to={`topics/${topic.slug}`}\n                >\n                  {topic.slug.toUpperCase()}\n                </Link>\n              );\n            })}\n            )\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nexport const updateArticleVoteReq = (id, inc_votes, path) => {\n  return axios\n    .patch(`https://nc-news2020.herokuapp.com/api/${path}/${id}`, {\n      inc_votes\n    })\n    .then(({ data }) => {\n      return data;\n    });\n};\n\nexport default updateArticleVoteReq;\n","import React, { Component } from \"react\";\nimport updateArticleVoteReq from \"../utils/updateVoteReq\";\nimport { Button } from \"react-bootstrap\";\n\nclass Vote extends Component {\n  state = { currentVote: 0, voteValue: 0 };\n\n  handleVote = num => {\n    this.setState(currentState => {\n      return {\n        currentVote: currentState.currentVote + num,\n        voteValue: currentState.voteValue + num\n      };\n    });\n    const { path, id } = this.props;\n    updateArticleVoteReq(id, num, path);\n  };\n\n  componentDidMount() {\n    const { currentVote } = this.props;\n    this.setState({ currentVote });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Votes: {this.state.currentVote}</h4>\n        {this.state.voteValue <= 0 && (\n          <button\n            onClick={event => this.handleVote(1)}\n            type=\"button\"\n            class=\"btn btn-light\"\n            type=\"button\"\n            class=\"btn btn-outline-info\"\n          >\n            Up Vote 👍\n          </button>\n        )}\n        {this.state.voteValue >= 0 && (\n          <button\n            onClick={event => this.handleVote(-1)}\n            type=\"button\"\n            class=\"btn btn-outline-danger\"\n          >\n            Down Vote 👎\n          </button>\n        )}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Vote;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport Vote from \"./Vote\";\n\nconst ArticleCard = ({ allArticles }) => {\n  if (allArticles) {\n    return allArticles.map(article => {\n      return (\n        <main key={article.article_id}>\n          <hr />\n          <h3>\n            <Link to={`/articles/${article.article_id}`}>{article.title}</Link>\n          </h3>\n          <h4>\n            <Link to={`/topics/${article.topic}`}>Topic {article.topic}</Link>\n          </h4>\n          <h4>\n            <Link to={`/articles/${article.article_id}/comments`}>\n              Comments {article.comment_count}\n            </Link>\n          </h4>\n          <Vote\n            id={article.article_id}\n            currentVote={article.votes}\n            path={\"articles\"}\n          />\n          <hr />\n        </main>\n      );\n    });\n  }\n};\n\nexport default ArticleCard;\n","import React from \"react\";\n\nconst Loading = ({ msg }) => {\n  return (\n    <div class=\"alert alert-info\">\n      <strong>Loading!</strong> {msg && <h4>{msg}</h4>}\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport ArticleCard from \"./ArticleCard\";\nimport makeApiRequests from \"../utils/api\";\nimport Loading from \"./Loading\";\n\nclass ArticleList extends Component {\n  state = {\n    allArticles: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    if (this.props.topic) {\n      makeApiRequests(`articles/?topic=${this.props.topic}`)\n        .then(({ articles }) => {\n          const articlesData = articles.map(article => article);\n          this.setState({ allArticles: articlesData });\n        })\n        .then(() => {\n          this.setState({ loading: false });\n        });\n    } else {\n      makeApiRequests(\"articles/\")\n        .then(({ articles }) => {\n          const articlesData = articles.map(article => article);\n          this.setState({ allArticles: articlesData });\n        })\n        .then(() => {\n          this.setState({ loading: false });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <articles>\n        {this.state.loading && (\n          <Loading msg={\"One tick just getting you the articles\"} />\n        )}\n        <ArticleCard allArticles={this.state.allArticles} />\n      </articles>\n    );\n  }\n}\n\nexport default ArticleList;\n","import axios from \"axios\";\n\nexport const postComment = (article_id, body) => {\n  console.log(article_id, \"<<<<<<<<<id\");\n  console.log(body, \"<<<<<<<<< Body\");\n\n  return axios\n    .post(\n      `https://nc-news2020.herokuapp.com/api/articles/${article_id}/comments`,\n      {\n        username: \"cooljmessy\",\n        body\n      }\n    )\n    .then(({ data: comment }) => {\n      return comment;\n    });\n};\n\nexport default postComment;\n","import React from \"react\";\n\nconst NoticeMsgDisplay = ({ msg }) => {\n  return (\n    <div class=\"alert alert-success\" role=\"alert\">\n      <h3>{msg}</h3>\n    </div>\n  );\n};\n\nexport default NoticeMsgDisplay;\n","import React, { Component } from \"react\";\nimport postComment from \"../utils/postCommentReq\";\nimport NoticeMsgDisplay from \"./NoticeMsgDisplay\";\n\nclass CommentForm extends Component {\n  state = {\n    bodyInput: \"\",\n    postedComment: null,\n    posting: null\n  };\n\n  handleChange = event => {\n    this.setState({ bodyInput: event.target.value });\n  };\n\n  handleSubmit = event => {\n    console.log(\"123\");\n\n    event.preventDefault();\n    this.setState({ posting: true, bodyInput: \"\" });\n    const { bodyInput } = this.state;\n    const { article_id } = this.props;\n    postComment(article_id, bodyInput).then(postedComment => {\n      this.setState({ postedComment, posting: null });\n    });\n  };\n\n  render() {\n    return (\n      <ul>\n        {this.state.postedComment && (\n          <NoticeMsgDisplay\n            msg={`\"${this.state.postedComment.comment.body}\" has been posted!`}\n          />\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <div class=\"form-group\">\n            <textarea\n              placeholder=\"Write a comment 🔥\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.bodyInput}\n              id=\"comment\"\n              className=\"form-control\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n          {!this.state.posting && (\n            <button className=\"btn btn-outline-secondary\">\n              Add Comment ▶︎\n            </button>\n          )}\n        </form>\n      </ul>\n    );\n  }\n}\n\nexport default CommentForm;\n","import React from \"react\";\n\nconst ErrHandling = ({ err_msg }) => {\n  return (\n    <div class=\"alert alert-danger\" role=\"alert\">\n      {err_msg ? <h3>{err_msg}</h3> : <h3>Page not found... 💩</h3>}\n    </div>\n  );\n};\n\nexport default ErrHandling;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport makeApiRequests from \"../utils/api\";\nimport CommentForm from \"./CommentForm\";\nimport Vote from \"./Vote\";\nimport Loading from \"./Loading\";\nimport ErrDisplay from \"./ErrDisplay\";\n\nclass Article extends Component {\n  state = {\n    article: \"\",\n    loading: true,\n    err: null,\n    err_msg: \"\"\n  };\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    makeApiRequests(`articles/${article_id}`)\n      .then(article => {\n        this.setState({ article, loading: false });\n      })\n      .catch(() => {\n        this.setState({\n          err: true,\n          err_msg: \"Ops this article dose not exist 💩 404\"\n        });\n      });\n  }\n\n  render() {\n    const article = this.state.article.article;\n    if (article) {\n      return (\n        <div>\n          <h3>{article.title}</h3>\n          <p>{article.body}</p>\n          <Link to={`/topics/${article.topic}`}>{article.topic}</Link>\n          <p>Author {article.author}</p>\n          <p>Created at {article.created_at}</p>\n          <Link to={\"comments\"}>\n            <button> Show {article.comment_count} comments 👀</button>\n          </Link>\n          <Vote\n            id={article.article_id}\n            currentVote={article.votes}\n            path={\"articles\"}\n          />\n          <CommentForm article_id={article.article_id} />\n        </div>\n      );\n    } else if (this.state.err)\n      return <ErrDisplay err_msg={this.state.err_msg} />;\n    else return <Loading err_msg={\"Just getting you that amazing article\"} />;\n  }\n}\n\nexport default Article;\n","import axios from \"axios\";\n\nexport const deleteCommentReq = url => {\n  return axios\n    .delete(`https://nc-news2020.herokuapp.com/api/${url}`)\n    .then(({ data }) => {\n      // returns an empty object on success and nothing when failed\n      return data;\n    });\n};\n\nexport default deleteCommentReq;\n","import React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport deleteCommentReq from \"../utils/deleteCommentReq\";\nimport Vote from \"./Vote\";\nimport Loading from \"./Loading\";\nimport ErrDisplay from \"./ErrDisplay\";\nimport NoticeMsgDisplay from \"./NoticeMsgDisplay\";\n\nclass ArticleComments extends Component {\n  state = {\n    comments: [],\n    sortBy: \"created_at\",\n    loggedInUser: \"butter_bridge\",\n    loading: true,\n    err: false,\n    err_msg: \"\",\n    deletingComment: false,\n    commentDeleted: false\n  };\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    makeApiRequests(`articles/${article_id}/comments`).then(comments => {\n      this.setState({ comments, loading: false });\n    });\n  }\n\n  componentDidUpdate() {\n    const { article_id } = this.props;\n    makeApiRequests(\n      `articles/${article_id}/comments?sort_by=${this.state.sortBy}`\n    ).then(comments => {\n      this.setState({ comments });\n    });\n  }\n\n  handleSortByByChange = ({ target: { value } }) => {\n    this.setState({ sortBy: value });\n  };\n\n  handleDeleteComment = comment_id => {\n    this.setState({ commentDeleted: false, deletingComment: true });\n    deleteCommentReq(`comments/${comment_id}`)\n      .then(() => {\n        this.setState({ commentDeleted: true, deletingComment: false });\n      })\n      .catch(() => {\n        this.setState({\n          loading: false,\n          err: true,\n          err_msg: \"The comment you trying to delete is no longer exist 🙅‍♀️\"\n        });\n      });\n  };\n\n  render() {\n    const {\n      comments: { comments }\n    } = this.state;\n\n    if (comments) {\n      if (this.state.err) return <ErrDisplay err_msg={this.state.err_msg} />;\n      return (\n        <>\n          {this.state.commentDeleted && (\n            <NoticeMsgDisplay msg={\"The comment has been deleted!\"} />\n          )}\n          <form>\n            <label>\n              Sort comments by:\n              <select\n                value={this.state.value}\n                onChange={this.handleSortByByChange}\n              >\n                <option value=\"created_at\">Date Created</option>\n                <option value=\"username\">Author</option>\n                <option value=\"votes\"> Comment Votes</option>\n              </select>\n            </label>\n          </form>\n          {comments.map(comment => {\n            return (\n              <>\n                <hr />\n                <br />\n                <p>Body: {comment.body}</p>\n                {!this.state.deletingComment &&\n                  this.state.loggedInUser === comment.username && (\n                    <button\n                      onClick={event =>\n                        this.handleDeleteComment(comment.comment_id)\n                      }\n                    >\n                      {\" \"}\n                      Delete Comment{\" \"}\n                    </button>\n                  )}\n                <p>Username: {comment.username}</p>\n                <p>Created at: {comment.created_at}</p>\n                <br />\n                <Vote\n                  id={comment.comment_id}\n                  currentVote={comment.votes}\n                  path={\"comments\"}\n                />\n              </>\n            );\n          })}\n        </>\n      );\n    } else return <Loading msg={\"Cool comments are on their way!\"} />;\n  }\n}\n\nexport default ArticleComments;\n","import React, { Component } from \"react\";\nimport { Router } from \"@reach/router\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport ArticleList from \"./components/ArticleList\";\nimport Article from \"./components/Article\";\nimport ArticleComments from \"./components/ArticleComments\";\nimport ErrDisplay from \"./components/ErrDisplay\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  state = {\n    username: \"butter_bridge\"\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Title username={this.state.username} />\n        <Navbar />\n        <Router>\n          <ArticleList path=\"/\" />\n          <ArticleList path=\"/topics/:topic\" />\n          <ArticleList path=\"/articles/\" />\n          <Article path=\"/articles/:article_id/\" />\n          <ArticleComments path=\"/articles/:article_id/comments\" />\n          <ErrDisplay default />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}