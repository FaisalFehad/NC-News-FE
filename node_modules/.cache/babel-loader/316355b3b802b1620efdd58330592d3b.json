{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/Code/FN/FE-NC-news/fe-nc-news/src/components/ArticleComments.jsx\";\nimport React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport SortCommentsDropDown from \"../components/SortCommentsDropDown\";\n\nclass ArticleComments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      sortBy: \"Date_created\"\n    };\n\n    this.handleSortByByChange = event => {\n      this.setState({\n        sortBy: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const article_id = this.props.article_id;\n    makeApiRequests(`articles/${article_id}/comments`).then(comments => {\n      this.setState({\n        comments\n      });\n    });\n  }\n\n  render() {\n    const comments = this.state.comments.comments;\n\n    if (comments) {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Sort comments by:\", React.createElement(\"select\", {\n        value: this.state.value,\n        onChange: this.handleSortByByChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"date created\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"option\", {\n        value: \"comment_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Comment Count\"), React.createElement(\"option\", {\n        value: \"votes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Votes\"))))), comments.map(comment => {\n        return React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Body: \", comment.body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Username: \", comment.username), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Votes: \", comment.votes), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Created at: \", comment.created_at), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n      }), \";\");\n    } else return null;\n  }\n\n}\n\nexport default ArticleComments;","map":{"version":3,"sources":["/Users/faisal/Code/FN/FE-NC-news/fe-nc-news/src/components/ArticleComments.jsx"],"names":["React","Component","makeApiRequests","SortCommentsDropDown","ArticleComments","state","comments","sortBy","handleSortByByChange","event","setState","target","value","componentDidMount","article_id","props","then","render","map","comment","body","username","votes","created_at"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD8B;;AAAA,SAatCC,oBAbsC,GAafC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAfqC;AAAA;;AAMtCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,UADU,GACK,KAAKC,KADV,CACVD,UADU;AAElBZ,IAAAA,eAAe,CAAE,YAAWY,UAAW,WAAxB,CAAf,CAAmDE,IAAnD,CAAwDV,QAAQ,IAAI;AAClE,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD,KAFD;AAGD;;AAMDW,EAAAA,MAAM,GAAG;AAAA,UAEOX,QAFP,GAGH,KAAKD,KAHF,CAELC,QAFK,CAEOA,QAFP;;AAKP,QAAIA,QAAJ,EAAc;AACZ,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWO,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKJ,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAQ,QAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE;AAAQ,QAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAFF,CADF,CADF,CADF,EAgBGF,QAAQ,CAACY,GAAT,CAAaC,OAAO,IAAI;AACvB,eACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUA,OAAO,CAACC,IAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAcD,OAAO,CAACE,QAAtB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWF,OAAO,CAACG,KAAnB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBH,OAAO,CAACI,UAAxB,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF;AAYD,OAbA,CAhBH,MADF;AAkCD,KAnCD,MAmCO,OAAO,IAAP;AACR;;AA1DqC;;AA6DxC,eAAenB,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport SortCommentsDropDown from \"../components/SortCommentsDropDown\";\n\nclass ArticleComments extends Component {\n  state = {\n    comments: [],\n    sortBy: \"Date_created\"\n  };\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    makeApiRequests(`articles/${article_id}/comments`).then(comments => {\n      this.setState({ comments });\n    });\n  }\n\n  handleSortByByChange = event => {\n    this.setState({ sortBy: event.target.value });\n  };\n\n  render() {\n    const {\n      comments: { comments }\n    } = this.state;\n\n    if (comments) {\n      return (\n        <>\n          <div>\n            <form>\n              <label>\n                Sort comments by:\n                <select\n                  value={this.state.value}\n                  onChange={this.handleSortByByChange}\n                >\n                  <option value=\"date created\">Date Created</option>\n                  <option value=\"comment_count\">Comment Count</option>\n                  <option value=\"votes\">Votes</option>\n                </select>\n              </label>\n            </form>\n          </div>\n          {comments.map(comment => {\n            return (\n              <>\n                <hr />\n                <br />\n                <p>Body: {comment.body}</p>\n                <p>Username: {comment.username}</p>\n                <p>Votes: {comment.votes}</p>\n                <p>Created at: {comment.created_at}</p>\n                <br />\n                <hr />\n              </>\n            );\n          })}\n          ;\n        </>\n      );\n    } else return null;\n  }\n}\n\nexport default ArticleComments;\n"]},"metadata":{},"sourceType":"module"}